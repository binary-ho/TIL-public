site_name: binary-ho TIL
site_dir: site
site_url: https://binary-ho.github.io/TIL-public/
use_directory_urls: false

# docs 폴더를 문서 디렉토리로 사용
# 이제 실제 파일 위치에 맞게 nav 설정을 수정해야 함
theme:
  name: material
markdown_extensions:
  - admonition
  - pymdownx.superfences
plugins:
- search
- awesome-pages
nav:
- S3 + CloudFront 배포시 보안 정책 제대로 설정하기: S3 + CloudFront 배포시 보안 정책 제대로 설정하기.md
- UI UX 구현 방법론과 게슈탈트 이론: UI UX 구현 방법론과 게슈탈트 이론.md
- '[Cache] 간단한 캐시 Read-Write 전략': '[Cache] 간단한 캐시 Read-Write 전략.md'
- '[Nginx] Don''t try this at home - ''IF'' is Evil': '[Nginx] Don''t try this at
    home - ''IF'' is Evil.md'
- '[Test] 단위 테스트의 모호함과 다양한 SW 테스트에 대하여': '[Test] 단위 테스트의 모호함과 다양한 SW 테스트에 대하여.md'
- Android:
  - '[책] Do it 안드로이드 앱 프로그래밍':
    - 1. Layout:
      - Frame Layout: Android/[책] Do it 안드로이드 앱 프로그래밍/1. Layout/Frame Layout.md
      - Layout Code: Android/[책] Do it 안드로이드 앱 프로그래밍/1. Layout/Layout Code.md
      - Scroll View: Android/[책] Do it 안드로이드 앱 프로그래밍/1. Layout/Scroll View.md
- Architecture:
  - '[Architecture] 채팅 시스템 설계': Architecture/[Architecture] 채팅 시스템 설계.md
  - 테스트와 아키텍처: Architecture/테스트와 아키텍처.md
- AWS:
  - AWS 인스턴스 만들기: AWS/AWS 인스턴스 만들기.md
  - 인스턴스 하나에 여러 프로젝트 배포하기: AWS/인스턴스 하나에 여러 프로젝트 배포하기.md
- Batch:
  - EnableProcessing과 Mata Data: Batch/EnableProcessing과 Mata Data.md
- Book:
  - 개발자 온보딩 가이드:
    - '3. 레거시 코드에 임하는 우리의 자세': Book/개발자 온보딩 가이드/3. 레거시 코드에 임하는 우리의 자세 .md
  - 함께 자라기:
    - 간단 요약1: Book/함께 자라기/간단 요약1.md
- caching:
  - CDN을 위한 웹 캐슁: caching/CDN을 위한 웹 캐슁.md
  - 분산 이질형 객체 환경에서 캐싱 (temp): caching/분산 이질형 객체 환경에서 캐싱 (temp).md
- Computer Architecture:
  - 2.3 명령어 파이프라이닝: Computer Architecture/2.3 명령어 파이프라이닝.md
- Computer Network:
  - 11. Routing Protocols: Computer Network/11. Routing Protocols.md
  - 13. transport layer: Computer Network/13. transport layer.md
  - 14. UDP: Computer Network/14. UDP.md
  - 15. TCP: Computer Network/15. TCP.md
  - 16. IPv6: Computer Network/16. IPv6.md
  - 2. OSI Model ans IP Protocol Suite: Computer Network/2. OSI Model ans IP Protocol
      Suite.md
  - 3. Network Layer: Computer Network/3. Network Layer.md
  - 4. IPv4 Addresses: Computer Network/4. IPv4 Addresses.md
  - 5. Classless Addressing: Computer Network/5. Classless Addressing.md
  - 6. Delivery and Forwarding: Computer Network/6. Delivery and Forwarding.md
  - 7. IPv4: Computer Network/7. IPv4.md
  - 7단원 예제들: Computer Network/7단원 예제들.md
  - 8. ARP: Computer Network/8. ARP.md
  - 9. ICMPv4: Computer Network/9. ICMPv4.md
  - Routing 문제 모음: Computer Network/Routing 문제 모음.md
  - Special Addresses and NAT: Computer Network/Special Addresses and NAT.md
  - 이미정 교수님 컴퓨터 네트워크 (이화여자대학교):
    - 1.2.1 Host와 Links: Computer Network/이미정 교수님 컴퓨터 네트워크 (이화여자대학교)/1.2.1 Host와 Links.md
    - 1.3 Packet Switching: Computer Network/이미정 교수님 컴퓨터 네트워크 (이화여자대학교)/1.3 Packet
        Switching.md
- Concurrency:
  - '[Concurrency] 접근 제한을 통한 다양한 동시성 문제 해결 방법과 사례들': Concurrency/[Concurrency] 접근
      제한을 통한 다양한 동시성 문제 해결 방법과 사례들.md
  - '[CRDT] LLWRegister와 Lamport Clock': Concurrency/[CRDT] LLWRegister와 Lamport Clock.md
  - 재고시스템으로 알아보는 동시성이슈 해결방법: Concurrency/재고시스템으로 알아보는 동시성이슈 해결방법.md
- Data Structure:
  - 1. DS 기본: Data Structure/1. DS 기본.md
  - AVL 트리 실전 예제: Data Structure/AVL 트리 실전 예제.md
  - Permutations 실전 예제: Data Structure/Permutations 실전 예제.md
  - 최소 스패닝 트리 구성 예제: Data Structure/최소 스패닝 트리 구성 예제.md
  - 희소 행렬 array, list: Data Structure/희소 행렬 array, list.md
  - hw2. Tamplate Programming:
    - hw2 a to c: Data Structure/hw2. Tamplate Programming/hw2 a to c.md
- DB:
  - 10. 트리 구조 인덱싱: DB/10. 트리 구조 인덱싱.md
  - 11. 해시 기반 인덱싱: DB/11. 해시 기반 인덱싱.md
  - 16. 트랜잭션 ACID와 동시수행 이상현상: DB/16. 트랜잭션 ACID와 동시수행 이상현상.md
  - 16.4 [중요] 2PL의 종류와 락 종류, 잠금의 대상, SQL 트랜잭션, 트랜잭션 격리수준: DB/16.4 [중요] 2PL의 종류와 락
      종류, 잠금의 대상, SQL 트랜잭션, 트랜잭션 격리수준.md
  - 17.1 [중요] Lock Manager와 Lock의 요구, 해제 처리: DB/17.1 [중요] Lock Manager와 Lock의 요구,
      해제 처리.md
  - 17.3 [중요] 잠금 강도 변환과 Update Lock, 그리고 Deadlock과 방지법: DB/17.3 [중요] 잠금 강도 변환과 Update
      Lock, 그리고 Deadlock과 방지법.md
  - 17.5 팬텀 문제와 B+ Tree 동시성 제어: DB/17.5 팬텀 문제와 B+ Tree 동시성 제어.md
  - 18. [중요] ARIES 장애 복구 Protocol, Log, 복구 구조: DB/18. [중요] ARIES 장애 복구 Protocol, Log,
      복구 구조.md
  - 18.4 [부실] WAL, Checkpointing: DB/18.4 [부실] WAL, Checkpointing.md
  - 18.6 [매우 중요] 시스템 장애 복구: DB/18.6 [매우 중요] 시스템 장애 복구.md
  - 2.3 개체와 관계, 관계집합: DB/2.3 개체와 관계, 관계집합.md
  - 2.3 관계와 관계 집합: DB/2.3 관계와 관계 집합.md
  - 2.4 [중요] ER 모델의 기능들: DB/2.4 [중요] ER 모델의 기능들.md
  - 2.5 ER 모델 개념적 설계 (작성중): DB/2.5 ER 모델 개념적 설계 (작성중).md
  - 21.3 임의 접근 제어: DB/21.3 임의 접근 제어.md
  - 21.5 [중요] 보안과 암호화: DB/21.5 [중요] 보안과 암호화.md
  - 3. 관계 모델: DB/3. 관계 모델.md
  - 3.2 [중요] 무결성 제약 조건: DB/3.2 [중요] 무결성 제약 조건.md
  - 3.3 [중요] 무결성 제약조건 집행: DB/3.3 [중요] 무결성 제약조건 집행.md
  - 3.5 [중요] 논리적 DB 설계 ER을 관계 모델로: DB/3.5 [중요] 논리적 DB 설계 ER을 관계 모델로.md
  - 3.6 View: DB/3.6 View.md
  - 4. Relational Algebra: DB/4. Relational Algebra.md
  - 5.3 [중요] 집합 연산과 중첩 질의: DB/5.3 [중요] 집합 연산과 중첩 질의.md
  - 5.4 키의 종류: DB/5.4 키의 종류.md
  - 5.5 집단 연산자: DB/5.5 집단 연산자.md
  - DataBase 다중화 문제 1 [윤영 교수님 특별 수업]: DB/DataBase 다중화 문제 1 [윤영 교수님 특별 수업].md
  - Database 다중화 문제 2: DB/Database 다중화 문제 2.md
  - DB 기말 퀴즈 형태 문항 대비: DB/DB 기말 퀴즈 형태 문항 대비.md
  - Homomorphic encryption: DB/Homomorphic encryption.md
  - Normalization - 4NF, 5NF: DB/Normalization - 4NF, 5NF.md
  - SQL Injection: DB/SQL Injection.md
  - SQL Practice 2: DB/SQL Practice 2.md
  - '[Article] DBMS는 어떻게 트랜잭션을 관리할까': DB/[Article] DBMS는 어떻게 트랜잭션을 관리할까.md
  - 윤영 교수님 postgresql 실습 - OUTTER JOIN과 TRIGGER: DB/윤영 교수님 postgresql 실습 - OUTTER
      JOIN과 TRIGGER.md
  - 윤영 교수님 postgresql 실습 2: DB/윤영 교수님 postgresql 실습 2.md
  - MySQL:
    - '[MySQL] MVCC와 잠금 없는 읽기 ': DB/MySQL/[MySQL] MVCC와 잠금 없는 읽기 .md
    - '[MySQL] MySQL B-Tree Index 2 - 인덱스 Scan 방식과 인덱스 사용에 영향을 미치는 요소들': DB/MySQL/[MySQL]
        MySQL B-Tree Index 2 - 인덱스 Scan 방식과 인덱스 사용에 영향을 미치는 요소들.md
    - '[MySQL] MySQL B-Tree Index 3 - 인덱스 스캔 방향과 정렬, 효율성과 작업 범위': DB/MySQL/[MySQL]
        MySQL B-Tree Index 3 - 인덱스 스캔 방향과 정렬, 효율성과 작업 범위.md
    - '[MySQL] MySQL B-Tree 인덱스 1 ': DB/MySQL/[MySQL] MySQL B-Tree 인덱스 1 .md
    - '[MySQL] 파티셔닝 1': DB/MySQL/[MySQL] 파티셔닝 1.md
    - '[MySQL] 파티션 2 - 파티션의 종류': DB/MySQL/[MySQL] 파티션 2 - 파티션의 종류.md
    - MySQL:
      - '[MySQL] MySQL Clustering Index, Unique Index, Foreign Key Index': DB/MySQL/MySQL/[MySQL]
          MySQL Clustering Index, Unique Index, Foreign Key Index.md
  - 쿼리 튜닝:
    - SQL의 처리 과정과 Optimizier, 데이터 저장 및 IO: DB/쿼리 튜닝/SQL의 처리 과정과 Optimizier, 데이터 저장
        및 IO.md
- deployment:
  - Graceful Shutdown: deployment/Graceful Shutdown.md
  - 무중단 배포: deployment/무중단 배포.md
- Docker:
  - Docker Container 기술의 이해: Docker/Docker Container 기술의 이해.md
  - Docker File과 Docker Image 만들기: Docker/Docker File과 Docker Image 만들기.md
  - Docker Life-cycle과 명령어: Docker/Docker Life-cycle과 명령어.md
  - 도커 기본 명령어와 이해: Docker/도커 기본 명령어와 이해.md
  - 재빌드 최적화: Docker/재빌드 최적화.md
- Effective Java:
  - Item 1. 생성자 대신 정적 팩터리 메서드를 고려하라: Effective Java/Item 1. 생성자 대신 정적 팩터리 메서드를 고려하라.md
  - Item 10. equals는 일반 규약을 재정의하라: Effective Java/Item 10. equals는 일반 규약을 재정의하라.md
  - Item 11. equals를 재정의하려거든 hashCode도 재정의하라: Effective Java/Item 11. equals를 재정의하려거든
      hashCode도 재정의하라.md
  - Item 12. toString을 항상 재정의하라: Effective Java/Item 12. toString을 항상 재정의하라.md
  - Item 13. clone 재정의는 주의해서 진행하라: Effective Java/Item 13. clone 재정의는 주의해서 진행하라.md
  - Item 14. Comparable을 구현할지 고려하라: Effective Java/Item 14. Comparable을 구현할지 고려하라.md
  - Item 15. 클래스와 멤버의 접근 권한을 최소화하라: Effective Java/Item 15. 클래스와 멤버의 접근 권한을 최소화하라.md
  - Item 16. public 클래스에서는 public 필드가 아닌 접근자 메서드를 사용하라: Effective Java/Item 16. public
      클래스에서는 public 필드가 아닌 접근자 메서드를 사용하라.md
  - Item 17. 변경 가능성을 최소화하라: Effective Java/Item 17. 변경 가능성을 최소화하라.md
  - Item 2. 생성자에 매개변수가 많다면 빌더를 고려하라: Effective Java/Item 2. 생성자에 매개변수가 많다면 빌더를 고려하라.md
  - Item 21. 인터페이스는 구현하는 쪽을 생각해 설계하라: Effective Java/Item 21. 인터페이스는 구현하는 쪽을 생각해 설계하라.md
  - Item 22. 인터페이스는 타입을 정의하는 용도로만 사용하라: Effective Java/Item 22. 인터페이스는 타입을 정의하는 용도로만
      사용하라.md
  - Item 23. 태그 달린 클래스보다는 클래스 계층구조를 활용하라: Effective Java/Item 23. 태그 달린 클래스보다는 클래스
      계층구조를 활용하라.md
  - Item 24. 맴버 클래스는 되도록 static으로 만들라: Effective Java/Item 24. 맴버 클래스는 되도록 static으로
      만들라.md
  - Item 25. 톱레벨 클래스는 한 파일에 하나만 담으라: Effective Java/Item 25. 톱레벨 클래스는 한 파일에 하나만 담으라.md
  - Item 3. private 생성자나 열거타입으로 싱글턴임을 보증하라: Effective Java/Item 3. private 생성자나 열거타입으로
      싱글턴임을 보증하라.md
  - Item 32. 제네릭과 가변인수를 함께 쓸 때는 신중하라: Effective Java/Item 32. 제네릭과 가변인수를 함께 쓸 때는 신중하라.md
  - Item 36. 비트 필드 대신 EnumSet을 사용하라: Effective Java/Item 36. 비트 필드 대신 EnumSet을 사용하라.md
  - Item 37. ordinal 인덱싱 대신 EnumMap을 사용하라: Effective Java/Item 37. ordinal 인덱싱 대신
      EnumMap을 사용하라.md
  - Item 4. 인스턴스화를 막으려거든 private 생성자를 사용하라: Effective Java/Item 4. 인스턴스화를 막으려거든 private
      생성자를 사용하라.md
  - Item 42. 익명 클래스 보다는 람다를 사용하라: Effective Java/Item 42. 익명 클래스 보다는 람다를 사용하라.md
  - Item 43. 람다보다는 메서드 참조를 사용하라: Effective Java/Item 43. 람다보다는 메서드 참조를 사용하라.md
  - Item 48. 스트림 병렬화는 주의해서 적용하라: Effective Java/Item 48. 스트림 병렬화는 주의해서 적용하라.md
  - Item 49. 매개변수가 유효한지 검사하라: Effective Java/Item 49. 매개변수가 유효한지 검사하라.md
  - Item 5. 자원을 직접 명시하지 말고 의존 객체 주입을 사용하라: Effective Java/Item 5. 자원을 직접 명시하지 말고 의존
      객체 주입을 사용하라.md
  - Item 50. 적시에 방어적 복사본을 만들어라: Effective Java/Item 50. 적시에 방어적 복사본을 만들어라.md
  - Item 55. 옵셔널 반환은 신중히 해라: Effective Java/Item 55. 옵셔널 반환은 신중히 해라.md
  - Item 6. 불필요한 객체 생성을 피하라: Effective Java/Item 6. 불필요한 객체 생성을 피하라.md
  - Item 64. 객체는 인터페이스를 사용해 참조하라: Effective Java/Item 64. 객체는 인터페이스를 사용해 참조하라.md
  - Item 7. 다 쓴 객체 참조를 해제하라: Effective Java/Item 7. 다 쓴 객체 참조를 해제하라.md
  - Item 70. 복구할 수 있는 상황에는 검사 예외를, 프로그래밍 오류에는 런타임 예외를 사용하라: Effective Java/Item 70.
      복구할 수 있는 상황에는 검사 예외를, 프로그래밍 오류에는 런타임 예외를 사용하라.md
  - Item 76. 가능한 한 실패 원자적으로 만들라: Effective Java/Item 76. 가능한 한 실패 원자적으로 만들라.md
  - Item 78. 공유 중인 가변 데이터는 동기화해 사용하라: Effective Java/Item 78. 공유 중인 가변 데이터는 동기화해 사용하라.md
  - Item 80. 스레드보다는 실행자, 태스크, 스트림을 애용해라: Effective Java/Item 80. 스레드보다는 실행자, 태스크,
      스트림을 애용해라.md
  - Item 81. wait와 notifty 보다는 동시성 유틸리티를 애용하라: Effective Java/Item 81. wait와 notifty
      보다는 동시성 유틸리티를 애용하라.md
  - Item 82. 스레드 안전성 수준을 문서화하라: Effective Java/Item 82. 스레드 안전성 수준을 문서화하라.md
  - Item 83. 지연 초기화는 신중히 사용해라: Effective Java/Item 83. 지연 초기화는 신중히 사용해라.md
  - Item 9. try-finally 보다는 try-with-resources를 사용하라: Effective Java/Item 9. try-finally
      보다는 try-with-resources를 사용하라.md
  - Item 90. 직렬화된 인스턴스 대신 직렬화 프록시 사용을 검토하라: Effective Java/Item 90. 직렬화된 인스턴스 대신 직렬화
      프록시 사용을 검토하라.md
- Errors:
  - Git:
    - checkout시 the file could be both a local file and a tracking branch 에러: Errors/Git/checkout시
        the file could be both a local file and a tracking branch 에러.md
    - SSH git clone: Errors/Git/SSH git clone.md
  - Java:
    - cannot find symbol: Errors/Java/cannot find symbol.md
- Firebase:
  - firebase db on()과 once(): Firebase/firebase db on()과 once().md
  - firebase query advance: Firebase/firebase query advance.md
  - firebase 쿼리 비효율 개선: Firebase/firebase 쿼리 비효율 개선.md
  - 실시간 DB 보안 규칙: Firebase/실시간 DB 보안 규칙.md
- gdsc:
  - backend:
    - Lamba & Stream: gdsc/backend/Lamba & Stream.md
    - Template Callback Pattern in Spring: gdsc/backend/Template Callback Pattern
        in Spring.md
    - '[발표] 객체지향 설계와 인터페이스 품질을 높이는 방법': gdsc/backend/[발표] 객체지향 설계와 인터페이스 품질을 높이는 방법.md
    - 김영한 입문 강좌:
      - 3. 스프링 웹 개발 기초: gdsc/backend/김영한 입문 강좌/3. 스프링 웹 개발 기초.md
      - 4. 회원 관리 예제: gdsc/backend/김영한 입문 강좌/4. 회원 관리 예제.md
      - 5. 스프링 빈과 의존관계: gdsc/backend/김영한 입문 강좌/5. 스프링 빈과 의존관계.md
      - 6. @GetMapping - 예제 2: gdsc/backend/김영한 입문 강좌/6. @GetMapping - 예제 2.md
    - 스프링 입문을 위한 자바 객체 지향의 원리와 이해:
      - 2. 자바와 절차적 구조적 프로그래밍: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/2. 자바와 절차적
          구조적 프로그래밍.md
      - 3. 자바와 객체 지향: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/3. 자바와 객체 지향.md
      - 3.6 상속 - 재사용 + 확장: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/3.6 상속 - 재사용 +
          확장.md
      - 3.7 다형성과 캡슐화: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/3.7 다형성과 캡슐화.md
      - 4. 자바가 확장한 객체지향: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/4. 자바가 확장한 객체지향.md
      - 5. 객체 지향 설계 5원칙 - SOLID: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/5. 객체 지향
          설계 5원칙 - SOLID.md
      - 6. 스프링이 사랑한 디자인패턴: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/6. 스프링이 사랑한 디자인패턴.md
      - 7.1. IoC, DI - 제어의 역전, 의존성 주입: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/7.1.
          IoC, DI - 제어의 역전, 의존성 주입.md
      - 7.1.7 스프링 애노테이션을 통한 의존성 주입: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/7.1.7
          스프링 애노테이션을 통한 의존성 주입.md
      - 7.2 AOP: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/7.2 AOP.md
      - B. Lambda and Interface in Java 8: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/B.
          Lambda and Interface in Java 8.md
      - Strategy Pattern: gdsc/backend/스프링 입문을 위한 자바 객체 지향의 원리와 이해/Strategy Pattern.md
- GIT:
  - '[Git] file status lifecycle': GIT/[Git] file status lifecycle.md
- hadoop:
  - basic level practice: hadoop/basic level practice.md
- HTML, CSS, JS:
  - CSS:
    - Advanced Selector: HTML, CSS, JS/CSS/Advanced Selector.md
    - CSS BOX: HTML, CSS, JS/CSS/CSS BOX.md
    - CSS IMAGE: HTML, CSS, JS/CSS/CSS IMAGE.md
    - CSS Layout: HTML, CSS, JS/CSS/CSS Layout.md
    - CSS Text, List: HTML, CSS, JS/CSS/CSS Text, List.md
  - HTML:
    - HTML FORM: HTML, CSS, JS/HTML/HTML FORM.md
- JAVA:
  - Covariant Return Type: JAVA/Covariant Return Type.md
  - GC 1편 - GC trade-off와 safepoint: JAVA/GC 1편 - GC trade-off와 safepoint.md
  - GC 2편 - CMS와 Tri-Color Marking: JAVA/GC 2편 - CMS와 Tri-Color Marking.md
  - GC 3편 CMS GC의 동작 방식: JAVA/GC 3편 CMS GC의 동작 방식.md
  - GC 4편 - G1GC: JAVA/GC 4편 - G1GC.md
  - JAVA Enum의 내부 구현: JAVA/JAVA Enum의 내부 구현.md
  - Lombok 사용시 주의할 점: JAVA/Lombok 사용시 주의할 점.md
  - '[JAVA 8] Lambda': JAVA/[JAVA 8] Lambda.md
  - '[JAVA 8] Stream': JAVA/[JAVA 8] Stream.md
  - '[라이브러리] Bucket4J 사용하기': JAVA/[라이브러리] Bucket4J 사용하기.md
  - '[발표 자료] Lambda & Stream의 도입 배경과 원리, 최적화 전략! 알고 쓰자!': JAVA/[발표 자료] Lambda & Stream의
      도입 배경과 원리, 최적화 전략! 알고 쓰자!.md
  - 자바 버전별 주요 변화 총정리 (~17): JAVA/자바 버전별 주요 변화 총정리 (~17).md
  - 자바 컬렉션 최적화: JAVA/자바 컬렉션 최적화.md
  - Jsoup:
    - Jsoup guidance 실전 1: JAVA/Jsoup/Jsoup guidance 실전 1.md
  - 동시성:
    - Java Concurrency 1 - 역사: JAVA/동시성/Java Concurrency 1 - 역사.md
  - 백기선 라이브 스터디:
    - 1. JVM과 컴파일 과정: JAVA/백기선 라이브 스터디/1. JVM과 컴파일 과정.md
    - 1.3 바이트 코드를 실행하는 방법: JAVA/백기선 라이브 스터디/1.3 바이트 코드를 실행하는 방법.md
    - 1.5 JVM의 구조: JAVA/백기선 라이브 스터디/1.5 JVM의 구조.md
    - 10. 멀티쓰레드 프로그래밍: JAVA/백기선 라이브 스터디/10. 멀티쓰레드 프로그래밍.md
    - 11.1 Enum: JAVA/백기선 라이브 스터디/11.1 Enum.md
    - '12. generics ': JAVA/백기선 라이브 스터디/12. generics .md
    - 13. java IO: JAVA/백기선 라이브 스터디/13. java IO.md
    - 2.1 Primitive Type: JAVA/백기선 라이브 스터디/2.1 Primitive Type.md
    - 2.3 Reference Type과 Array, java Local Variable Type Inference: JAVA/백기선 라이브
        스터디/2.3 Reference Type과 Array, java Local Variable Type Inference.md
    - 3. 연산자: JAVA/백기선 라이브 스터디/3. 연산자.md
    - 6. 상속: JAVA/백기선 라이브 스터디/6. 상속.md
    - 7. 패키지: JAVA/백기선 라이브 스터디/7. 패키지.md
    - 7.2 classpath와 modulepath: JAVA/백기선 라이브 스터디/7.2 classpath와 modulepath.md
    - 8. 자바 인터페이스 자세히: JAVA/백기선 라이브 스터디/8. 자바 인터페이스 자세히.md
    - 8.3 클래스 vs 인터페이스: JAVA/백기선 라이브 스터디/8.3 클래스 vs 인터페이스.md
    - 9. 자바 예외 처리: JAVA/백기선 라이브 스터디/9. 자바 예외 처리.md
- JavaScript:
  - Callback Function: JavaScript/Callback Function.md
  - HTML Collcetion: JavaScript/HTML Collcetion.md
  - '[ES11] Optional Chaining': JavaScript/[ES11] Optional Chaining.md
  - 객체와 배열 그리고 정렬: JavaScript/객체와 배열 그리고 정렬.md
  - ECMAScript6:
    - JS Class: JavaScript/ECMAScript6/JS Class.md
    - JS Module: JavaScript/ECMAScript6/JS Module.md
    - Promise 정적 메소드: JavaScript/ECMAScript6/Promise 정적 메소드.md
    - This and Arrow Function: JavaScript/ECMAScript6/This and Arrow Function.md
    - 객체 리터럴 프로퍼티: JavaScript/ECMAScript6/객체 리터럴 프로퍼티.md
- Objcet:
  - Law Of Demeter 최종본: Objcet/Law Of Demeter 최종본.md
  - Law of Demeter: Objcet/Law of Demeter.md
  - '[오브젝트] 6.2 인터페이스와 설계 품질': Objcet/[오브젝트] 6.2 인터페이스와 설계 품질.md
  - '[오브젝트] 6.3 원칙의 함정': Objcet/[오브젝트] 6.3 원칙의 함정.md
  - 객체지향의 목적과 객체지향 4대 특성: Objcet/객체지향의 목적과 객체지향 4대 특성.md
- OS:
  - Modern Operating Systems:
    - 2.3 [중요] 프로세스간 통신 - Busy Wait: OS/Modern Operating Systems/2.3 [중요] 프로세스간 통신
        - Busy Wait.md
    - 2.3.4 Sleep And WakeUp: OS/Modern Operating Systems/2.3.4 Sleep And WakeUp.md
    - 2.3.5 Semaphore: OS/Modern Operating Systems/2.3.5 Semaphore.md
    - 2.3.6 Mutex: OS/Modern Operating Systems/2.3.6 Mutex.md
    - 2.3.7 Moniter and barrier: OS/Modern Operating Systems/2.3.7 Moniter and barrier.md
    - 3. Memory Management와 메모리 추상화: OS/Modern Operating Systems/3. Memory Management와
        메모리 추상화.md
    - 3.2.2 Swapping: OS/Modern Operating Systems/3.2.2 Swapping.md
    - 3.3.1 Paging: OS/Modern Operating Systems/3.3.1 Paging.md
    - 3.3.2 [중요] Page Table: OS/Modern Operating Systems/3.3.2 [중요] Page Table.md
    - 3.3.3 [중요] TLBs: OS/Modern Operating Systems/3.3.3 [중요] TLBs.md
    - 3.3.4 대용량 메모리를 위한 페이지 테이블: OS/Modern Operating Systems/3.3.4 대용량 메모리를 위한 페이지
        테이블.md
    - 3.4 Page Replacement Algorithm (1): OS/Modern Operating Systems/3.4 Page Replacement
        Algorithm (1).md
    - 3.4 Page Replacement Algorithm (2) - LRU: OS/Modern Operating Systems/3.4 Page
        Replacement Algorithm (2) - LRU.md
    - 3.4 Page Replacement Algorithm (3) - Working Set: OS/Modern Operating Systems/3.4
        Page Replacement Algorithm (3) - Working Set.md
    - 3.7 Segmentation: OS/Modern Operating Systems/3.7 Segmentation.md
    - 4. File System: OS/Modern Operating Systems/4. File System.md
    - 4.2 Directory: OS/Modern Operating Systems/4.2 Directory.md
    - 4.3 File System Implementation: OS/Modern Operating Systems/4.3 File System
        Implementation.md
    - 4.3.2 File Implementation: OS/Modern Operating Systems/4.3.2 File Implementation.md
    - 4.3.3 디렉터리의 구현: OS/Modern Operating Systems/4.3.3 디렉터리의 구현.md
    - 4.3.4 Shared File: OS/Modern Operating Systems/4.3.4 Shared File.md
    - 5.4.1 Disk Hardware: OS/Modern Operating Systems/5.4.1 Disk Hardware.md
    - 5.4.1 RAID: OS/Modern Operating Systems/5.4.1 RAID.md
    - 5.4.2 Disk Formatting: OS/Modern Operating Systems/5.4.2 Disk Formatting.md
    - 5.4.3 Disk Arm Scheduling Algorithm: OS/Modern Operating Systems/5.4.3 Disk
        Arm Scheduling Algorithm.md
    - interrupt 흐름: OS/Modern Operating Systems/interrupt 흐름.md
    - Mutual Exclusion을 제공하는 Mechanism: OS/Modern Operating Systems/Mutual Exclusion을
        제공하는 Mechanism.md
    - System별 Scheduling 알고리즘: OS/Modern Operating Systems/System별 Scheduling 알고리즘.md
    - 중간 대비용: OS/Modern Operating Systems/중간 대비용.md
  - 윤성우 윈도우즈 시스템 프로그래밍:
    - 1.1 컴퓨터 구조: OS/윤성우 윈도우즈 시스템 프로그래밍/1.1 컴퓨터 구조.md
    - 1.2 유니코드: OS/윤성우 윈도우즈 시스템 프로그래밍/1.2 유니코드.md
    - 1.3 64비트 기반 프로그래밍: OS/윤성우 윈도우즈 시스템 프로그래밍/1.3 64비트 기반 프로그래밍.md
    - 2.1 컴퓨터구조 2: OS/윤성우 윈도우즈 시스템 프로그래밍/2.1 컴퓨터구조 2.md
    - 2.2 프로세스의 생성과 소멸: OS/윤성우 윈도우즈 시스템 프로그래밍/2.2 프로세스의 생성과 소멸.md
    - 6. 커널 오브젝트와 오브젝트 핸들: OS/윤성우 윈도우즈 시스템 프로그래밍/6. 커널 오브젝트와 오브젝트 핸들.md
  - 이화여대 반효경 교수 Operating Systems:
    - 2. System Structure & Program Execution 1: OS/이화여대 반효경 교수 Operating Systems/2.
        System Structure & Program Execution 1.md
    - 2. System Structure & Program Execution 2: OS/이화여대 반효경 교수 Operating Systems/2.
        System Structure & Program Execution 2.md
    - 5. [중요] 프로세스 관리 - Context and State: OS/이화여대 반효경 교수 Operating Systems/5. [중요]
        프로세스 관리 - Context and State.md
    - 5.4 Context Switch: OS/이화여대 반효경 교수 Operating Systems/5.4 Context Switch.md
    - 5.5 Process Scheduling Queue와 Scheduler: OS/이화여대 반효경 교수 Operating Systems/5.5
        Process Scheduling Queue와 Scheduler.md
    - 5.7 프로세스의 생성과 협력: OS/이화여대 반효경 교수 Operating Systems/5.7 프로세스의 생성과 협력.md
    - 6. CPU Scheduling: OS/이화여대 반효경 교수 Operating Systems/6. CPU Scheduling.md
    - 6.3 스케줄링 알고리즘과 성능 평가: OS/이화여대 반효경 교수 Operating Systems/6.3 스케줄링 알고리즘과 성능 평가.md
    - 6.4 Paging: OS/이화여대 반효경 교수 Operating Systems/6.4 Paging.md
    - 7. 메모리 관리와 연속 할당: OS/이화여대 반효경 교수 Operating Systems/7. 메모리 관리와 연속 할당.md
    - 8.1 Demand Paging: OS/이화여대 반효경 교수 Operating Systems/8.1 Demand Paging.md
    - 8.2 Page Replacement Algorithm 1: OS/이화여대 반효경 교수 Operating Systems/8.2 Page
        Replacement Algorithm 1.md
    - 8.5 Thrashing과 Working Set Alogorithm: OS/이화여대 반효경 교수 Operating Systems/8.5
        Thrashing과 Working Set Alogorithm.md
    - 9. 디스크의 구조와 스케줄링 알고리즘: OS/이화여대 반효경 교수 Operating Systems/9. 디스크의 구조와 스케줄링 알고리즘.md
    - 9.4 디스크 저전력 관리: OS/이화여대 반효경 교수 Operating Systems/9.4 디스크 저전력 관리.md
    - 강의 10-1. File System: OS/이화여대 반효경 교수 Operating Systems/강의 10-1. File System.md
    - 강의 10-2. File System Implementation 1: OS/이화여대 반효경 교수 Operating Systems/강의 10-2.
        File System Implementation 1.md
    - 강의 7-2 Classical Problems of Synchronization: OS/이화여대 반효경 교수 Operating Systems/강의
        7-2 Classical Problems of Synchronization.md
    - 강의 7-3 Monitor: OS/이화여대 반효경 교수 Operating Systems/강의 7-3 Monitor.md
    - 강의 7. Process Synchronize 1: OS/이화여대 반효경 교수 Operating Systems/강의 7. Process
        Synchronize 1.md
    - 강의 8. Deadlock: OS/이화여대 반효경 교수 Operating Systems/강의 8. Deadlock.md
- payment:
  - 결제 요청, 인증, 승인, 멱등성 아티클 요약: payment/결제 요청, 인증, 승인, 멱등성 아티클 요약.md
- React:
  - Class형 컴포넌트와 커스텀 메서드: React/Class형 컴포넌트와 커스텀 메서드.md
  - immer와 rematch: React/immer와 rematch.md
  - MANEE가 함수 컴포넌트로 갈아타는 이유: React/MANEE가 함수 컴포넌트로 갈아타는 이유.md
  - Prompt와 뒤로가기 제어: React/Prompt와 뒤로가기 제어.md
  - Redux 더 편하게 쓰기, 컴포넌트: React/Redux 더 편하게 쓰기, 컴포넌트.md
  - 프로젝트 Source Code 노출 문제: React/프로젝트 Source Code 노출 문제.md
- records:
  - '[220820] 프론트 로직을 백앤드에서 실행하도록 바꾸어서 성능 개선함': records/[220820] 프론트 로직을 백앤드에서 실행하도록
      바꾸어서 성능 개선함.md
- Spring:
  - AOP 사용시 주의사항: Spring/AOP 사용시 주의사항.md
  - '[Security] @WithSecurityContext를 이용해 커스텀 UserDetails SecurityContext Test 코드 작성하기': Spring/[Security]
      @WithSecurityContext를 이용해 커스텀 UserDetails SecurityContext Test 코드 작성하기.md
  - 간단한 Spring MVC 구조와 흐름: Spring/간단한 Spring MVC 구조와 흐름.md
  - Spring Security:
    - 1. 스프링 시큐리티의 기본: Spring/Spring Security/1. 스프링 시큐리티의 기본.md
    - 2. 스프링 시큐리티 OAuth 2.0 회원가입: Spring/Spring Security/2. 스프링 시큐리티 OAuth 2.0 회원가입.md
    - 2.5 OAuth 2.0 페이스북, 네이버 로그인 구현: Spring/Spring Security/2.5 OAuth 2.0 페이스북, 네이버
        로그인 구현.md
    - 4.1 기본 JWT Security 설정과 이해: Spring/Spring Security/4.1 기본 JWT Security 설정과 이해.md
    - 4.2 커스텀 필터 등록하기: Spring/Spring Security/4.2 커스텀 필터 등록하기.md
    - 4.3 JWT 로그인과 토큰으로 확인: Spring/Spring Security/4.3 JWT 로그인과 토큰으로 확인.md
    - 4.4 JWT 인가 구현: Spring/Spring Security/4.4 JWT 인가 구현.md
  - Spring WebSocket:
    - spring websocket: Spring/Spring WebSocket/spring websocket.md
    - Spring WebSocket과 STOMP (1): Spring/Spring WebSocket/Spring WebSocket과 STOMP
        (1).md
    - Spring WebSocket과 STOMP (2): Spring/Spring WebSocket/Spring WebSocket과 STOMP
        (2).md
    - STOMP와 Spring WebSocket: Spring/Spring WebSocket/STOMP와 Spring WebSocket.md
  - 기본:
    - 1. 객체지향과 스프링: Spring/기본/1. 객체지향과 스프링.md
    - 10. Bean Scope: Spring/기본/10. Bean Scope.md
    - 2. AppConfig와 스프링 컨테이너, DI: Spring/기본/2. AppConfig와 스프링 컨테이너, DI.md
    - 3. 스프링 컨테이너와 스프링 빈: Spring/기본/3. 스프링 컨테이너와 스프링 빈.md
    - 4. 웹 애플리케이션과 스프링 싱글톤: Spring/기본/4. 웹 애플리케이션과 스프링 싱글톤.md
    - 5. 컴포넌트 스캔과 의존관계 자동 주입하기: Spring/기본/5. 컴포넌트 스캔과 의존관계 자동 주입하기.md
    - 6. 컴포넌트 스캔 탐색 위치와 기본 스캔 대상: Spring/기본/6. 컴포넌트 스캔 탐색 위치와 기본 스캔 대상.md
    - 7. 컴포넌트 스캔 필터, 중복 등록, 충돌: Spring/기본/7. 컴포넌트 스캔 필터, 중복 등록, 충돌.md
    - 8. 의존관계 자동 주입: Spring/기본/8. 의존관계 자동 주입.md
    - 9. 빈 생명주기와 콜백: Spring/기본/9. 빈 생명주기와 콜백.md
  - 김영한 JPA 실전 1편:
    - 2. 도메인 분석하고 설계하기: Spring/김영한 JPA 실전 1편/2. 도메인 분석하고 설계하기.md
    - 2.5 엔티티 설계시 주의할 점: Spring/김영한 JPA 실전 1편/2.5 엔티티 설계시 주의할 점.md
    - 3. 회원 도메인 개발: Spring/김영한 JPA 실전 1편/3. 회원 도메인 개발.md
    - 3. 회원 도메인 개발하기: Spring/김영한 JPA 실전 1편/3. 회원 도메인 개발하기.md
    - 4. 상품 도메인 개발: Spring/김영한 JPA 실전 1편/4. 상품 도메인 개발.md
    - 5. 주문 도메인 개발: Spring/김영한 JPA 실전 1편/5. 주문 도메인 개발.md
    - Spring Boot Test: Spring/김영한 JPA 실전 1편/Spring Boot Test.md
    - 연관 관계의 주인: Spring/김영한 JPA 실전 1편/연관 관계의 주인.md
  - 김영한 고급편:
    - '[섹션 10] 스프링 AOP 구현': Spring/김영한 고급편/[섹션 10] 스프링 AOP 구현.md
    - '[섹션 4] 인터페이스, 구체 클래스 기반 프록시': Spring/김영한 고급편/[섹션 4] 인터페이스, 구체 클래스 기반 프록시.md
    - '[섹션 5] 동적 프록시': Spring/김영한 고급편/[섹션 5] 동적 프록시.md
    - '[섹션 6] 프록시 팩토리': Spring/김영한 고급편/[섹션 6] 프록시 팩토리.md
    - '[섹션 7] 스프링이 제공하는 빈 후처리기': Spring/김영한 고급편/[섹션 7] 스프링이 제공하는 빈 후처리기.md
    - '[섹션 8] @Aspect AOP': Spring/김영한 고급편/[섹션 8] @Aspect AOP.md
    - '[섹션 9] 스프링 AOP': Spring/김영한 고급편/[섹션 9] 스프링 AOP.md
  - 스프링 MVC 2편:
    - 스프링 부트 예외 처리: Spring/스프링 MVC 2편/스프링 부트 예외 처리.md
  - 스프링 실전 JPA 2 - 김영한:
    - 1. [중요] 회원 등록 , 수정, 조회 API: Spring/스프링 실전 JPA 2 - 김영한/1. [중요] 회원 등록 , 수정, 조회
        API.md
    - 2. 지연 로딩과 조회 성능 최적화: Spring/스프링 실전 JPA 2 - 김영한/2. 지연 로딩과 조회 성능 최적화.md
    - 2.3 [중요] N+1 문제와 fetch join 최적화: Spring/스프링 실전 JPA 2 - 김영한/2.3 [중요] N+1 문제와
        fetch join 최적화.md
    - 3. 컬렉션 조회 최적화: Spring/스프링 실전 JPA 2 - 김영한/3. 컬렉션 조회 최적화.md
    - 3.6 V4 DTO 직접 조회: Spring/스프링 실전 JPA 2 - 김영한/3.6 V4 DTO 직접 조회.md
    - 3.7 V5 - DTO 직접 조회 상황에서의 컬렉션 조회 최적화: Spring/스프링 실전 JPA 2 - 김영한/3.7 V5 - DTO
        직접 조회 상황에서의 컬렉션 조회 최적화.md
    - 4. OSIV와 성능 최적화: Spring/스프링 실전 JPA 2 - 김영한/4. OSIV와 성능 최적화.md
- Web:
  - www,google,com입력 발표 추가 자료: Web/www,google,com입력 발표 추가 자료.md
- 금융 도메인:
  - 보험증권과 심사 프로세스: 금융 도메인/보험증권과 심사 프로세스.md
- 도메인 주도 개발 시작하기:
  - 1.4 도메인 모델 패턴: 도메인 주도 개발 시작하기/1.4 도메인 모델 패턴.md
  - 1.6 밸류 타입과 유비쿼터스 언어: 도메인 주도 개발 시작하기/1.6 밸류 타입과 유비쿼터스 언어.md
  - 11. 모델 단위 CQRS: 도메인 주도 개발 시작하기/11. 모델 단위 CQRS.md
  - 2.4 도메인 영역의 주요 구성요소: 도메인 주도 개발 시작하기/2.4 도메인 영역의 주요 구성요소.md
  - 3.4 ID를 이용한 애그리거트 참조: 도메인 주도 개발 시작하기/3.4 ID를 이용한 애그리거트 참조.md
  - 4.3 JPA 매핑 구현 1: 도메인 주도 개발 시작하기/4.3 JPA 매핑 구현 1.md
  - 6.3 응용 서비스 구현: 도메인 주도 개발 시작하기/6.3 응용 서비스 구현.md
  - 7.2 도메인 서비스: 도메인 주도 개발 시작하기/7.2 도메인 서비스.md
- 성장:
  - 잘하기와 자라기: 성장/잘하기와 자라기.md
- 회고:
  - 금융 SI에서 글쓰기로 문제 해결하기: 회고/금융 SI에서 글쓰기로 문제 해결하기.md
  - 금융 SI에서 자동화를 추구하면 안되는 걸까: 회고/금융 SI에서 자동화를 추구하면 안되는 걸까.md
  - 폐쇄망에서 PARA로 파일 관리하기: 회고/폐쇄망에서 PARA로 파일 관리하기.md
